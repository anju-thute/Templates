{
  "$schema": "https://raw.githubusercontent.com/NSSAC/EpiHiper-Schema/master/schema/templateSchema.json",
  "epiHiperSchema": "https://raw.githubusercontent.com/NSSAC/EpiHiper-Schema/master/schema/templateSchema.json",
  "ann:id": "AgeStratification",
  "ann:label": "Age Stratification",
  "ann:description": "Age stratification of the initial health state of the population by CDC age group",
  "template": {
    "$schema": "https://raw.githubusercontent.com/NSSAC/EpiHiper-Schema/master/schema/initializationSchema.json",
    "epiHiperSchema": "https://raw.githubusercontent.com/NSSAC/EpiHiper-Schema/master/schema/initializationSchema.json",
    "sets": [
      {
        "id": "agegroup_p",
        "scope": "local",
        "content": {
          "elementType": "node",
          "scope": "local",
          "left": {
            "field": "age_group"
          },
          "operator": "==",
          "right": {
            "value": "p"
          }
        }
      },
      {
        "id": "agegroup_s",
        "scope": "local",
        "content": {
          "elementType": "node",
          "scope": "local",
          "left": {
            "field": "age_group"
          },
          "operator": "==",
          "right": {
            "value": "s"
          }
        }
      },
      {
        "id": "agegroup_a",
        "scope": "local",
        "content": {
          "elementType": "node",
          "scope": "local",
          "left": {
            "field": "age_group"
          },
          "operator": "==",
          "right": {
            "value": "a"
          }
        }
      },
      {
        "id": "agegroup_o",
        "scope": "local",
        "content": {
          "elementType": "node",
          "scope": "local",
          "left": {
            "field": "age_group"
          },
          "operator": "==",
          "right": {
            "value": "o"
          }
        }
      },
      {
        "id": "agegroup_g",
        "scope": "local",
        "content": {
          "scope": "local",
          "elementType": "node",
          "left": {
            "field": "age_group"
          },
          "operator": "==",
          "right": {
            "value": "g"
          }
        }
      }
    ],
    "initializations": [
      {
        "target": {
          "set": {
            "idRef": "agegroup_p"
          }
        },
        "foreach": [
          {
            "operations": [
              {
                "target": {
                  "node": {
                    "property": "healthState"
                  }
                },
                "operator": "=",
                "value": {
                  "healthState": "S_p"
                }
              }
            ]
          }
        ]
      },
      {
        "target": {
          "set": {
            "idRef": "agegroup_s"
          }
        },
        "foreach": [
          {
            "operations": [
              {
                "target": {
                  "node": {
                    "property": "healthState"
                  }
                },
                "operator": "=",
                "value": {
                  "healthState": "S_s"
                }
              }
            ]
          }
        ]
      },
      {
        "target": {
          "set": {
            "idRef": "agegroup_a"
          }
        },
        "foreach": [
          {
            "operations": [
              {
                "target": {
                  "node": {
                    "property": "healthState"
                  }
                },
                "operator": "=",
                "value": {
                  "healthState": "S_a"
                }
              }
            ]
          }
        ]
      },
      {
        "target": {
          "set": {
            "idRef": "agegroup_o"
          }
        },
        "foreach": [
          {
            "operations": [
              {
                "target": {
                  "node": {
                    "property": "healthState"
                  }
                },
                "operator": "=",
                "value": {
                  "healthState": "S_o"
                }
              }
            ]
          }
        ]
      },
      {
        "target": {
          "set": {
            "idRef": "agegroup_g"
          }
        },
        "foreach": [
          {
            "operations": [
              {
                "target": {
                  "node": {
                    "property": "healthState"
                  }
                },
                "operator": "=",
                "value": {
                  "healthState": "S_g"
                }
              }
            ]
          }
        ]
      }
    ]
  },
  "userInput": [
  {
      "ann:id": "NumberOfIndividuals",
      "ann:label": "Placeholder Number of individuals to initially infect",
      "ann:description": "Number of individuals that will be infected at the start of the simulation",
      "value": ["/template/initializations/1/sampling/number"],
      "exceads": {
        "minValue": 0,
        "maxValue": 999,
        "sweep": true,
        "calibrate": false
      }
    },
    {
      "ann:id": "InfectedState",
      "ann:label": "Placeholder Infected State",
      "ann:description": "The infected state to which individuals are set",
      "value": ["/template/initializations/1/sampling/sampled/foreach/1/operations/1/value/healthState"],
      "validValues": [
        {
          "jsonPath": "$..states.*.id"
        }
      ],
      "exceads": {
        "attributeType": "text"
      }
    }  
  ],
  "requirements": [
    {
      "field": "age_group"
    },
    {
      "jsonPath": "$.schema.fields[?(@.name=='age_group')]",
      "errorMessage": "A population with the field 'age_group' is required."
    },
    {
      "jsonPath": "$.schema.fields[?(@.name=='age_group')].constraints.enum[?(@=='p')]",
      "errorMessage": "A population with the enumeration value 'p' for the field 'age_group' is required."
    },
    {
      "jsonPath": "$.schema.fields[?(@.name=='age_group')].constraints.enum[?(@=='s')]",
      "errorMessage": "A population with the enumeration value 's' for the field 'age_group' is required."
    },
    {
      "jsonPath": "$.schema.fields[?(@.name=='age_group')].constraints.enum[?(@=='a')]",
      "errorMessage": "A population with the enumeration value 'a' for the field 'age_group' is required."
    },
    {
      "jsonPath": "$.schema.fields[?(@.name=='age_group')].constraints.enum[?(@=='o')]",
      "errorMessage": "A population with the enumeration value 'o' for the field 'age_group' is required."
    },
    {
      "jsonPath": "$.schema.fields[?(@.name=='age_group')].constraints.enum[?(@=='g')]",
      "errorMessage": "A population with the enumeration value 'g' for the field 'age_group' is required."
    },
    {
      "jsonPath": "$.template.states[?(@.id=='S_p')]",
      "errorMessage": "A model with the state 'S_p' is required."
    },
    {
      "jsonPath": "$.template.states[?(@.id=='S_s')]",
      "errorMessage": "A model with the state 'S_s' is required."
    },
    {
      "jsonPath": "$.template.states[?(@.id=='S_a')]",
      "errorMessage": "A model with the state 'S_a' is required."
    },
    {
      "jsonPath": "$.template.states[?(@.id=='S_o')]",
      "errorMessage": "A model with the state 'S_o' is required."
    },
    {
      "jsonPath": "$.template.states[?(@.id=='S_g')]",
      "errorMessage": "A model with the state 'S_g' is required."
    }
  ],
  "engines": [
    "EpiHiper"
  ],
  "exceads": {
  }
}
