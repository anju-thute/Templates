{
  "$schema": "https://raw.githubusercontent.com/NSSAC/EpiHiper-Schema/master/schema/templateSchema.json",
  "epiHiperSchema": "https://raw.githubusercontent.com/NSSAC/EpiHiper-Schema/master/schema/templateSchema.json",
  "ann:id": "VoluntaryHomeQuarantine",
  "ann:label": "Voluntary Home Quarantine",
  "ann:description": "Voluntary home quarantine for a percentage of complying individuals.",
  "template": {
    "$schema": "https://raw.githubusercontent.com/NSSAC/EpiHiper-Schema/master/schema/interventionSchema.json",
    "epiHiperSchema": "https://raw.githubusercontent.com/NSSAC/EpiHiper-Schema/master/schema/interventionSchema.json",
    "traits": [
      {
        "id": "nodeTrait",
        "ann:label": "Node Trait",
        "features": [
          {
            "id": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5",
            "ann:id": "enteredIsymp",
            "ann:label": "Node entered a Symptomatic State",
            "enums": [
              {
                "id": "true",
                "ann:label": "true"
              },
              {
                "id": "false",
                "ann:label": "false"
              }
            ],
            "default": "false"
          },
          {
            "id": "participateInHomeQuarantine",
            "ann:label": "Treatment",
            "enums": [
              {
                "id": "true",
                "ann:label": "true"
              },
              {
                "id": "false",
                "ann:label": "false"
              }
            ],
            "default": "false"
          }
        ]
      }
    ],
    "sets": [
      {
        "id": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5",
        "ann:id": "enteredIsymp",
        "ann:label": "Nodes which entered state Isymp.",
        "scope": "local",
        "content": {
          "operation": "intersection",
          "sets": [
            {
              "elementType": "node",
              "scope": "local",
              "left": {
                "node": {
                  "property": "healthState"
                }
              },
              "operator": "withPropertyIn",
              "right": {
                "valueList": {
                  "healthState": [
                    "Ipresymp_p",
                    "Isymp_p",
                    "Iasymp_p",
                    "Ipresymp_s",
                    "Isymp_s",
                    "Iasymp_s",
                    "Ipresymp_a",
                    "Isymp_a",
                    "Iasymp_a",
                    "Ipresymp_o",
                    "Isymp_o",
                    "Iasymp_o",
                    "Ipresymp_g",
                    "Isymp_g",
                    "Iasymp_g"
                  ]
                }
              }
            },
            {
              "elementType": "node",
              "scope": "local",
              "left": {
                "node": {
                  "property": "nodeTrait",
                  "feature": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5"
                }
              },
              "operator": "==",
              "right": {
                "value": {
                  "trait": "nodeTrait",
                  "feature": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5",
                  "enum": "false"
                }
              }
            }
          ]
        }
      },
      {
        "id": "enteredIsympGlobal",
        "ann:label": "Nodes which newly entered a symptomatic State (e.g. Isymp).",
        "scope": "global",
        "content": {
          "operation": "intersection",
          "sets": [
            {
              "elementType": "node",
              "scope": "global",
              "left": {
                "node": {
                  "property": "healthState"
                }
              },
              "operator": "withPropertyIn",
              "right": {
                "valueList": {
                  "healthState": [
                    "Ipresymp_p",
                    "Isymp_p",
                    "Iasymp_p",
                    "Ipresymp_s",
                    "Isymp_s",
                    "Iasymp_s",
                    "Ipresymp_a",
                    "Isymp_a",
                    "Iasymp_a",
                    "Ipresymp_o",
                    "Isymp_o",
                    "Iasymp_o",
                    "Ipresymp_g",
                    "Isymp_g",
                    "Iasymp_g"
                  ]
                }
              }
            },
            {
              "elementType": "node",
              "scope": "global",
              "left": {
                "node": {
                  "property": "nodeTrait",
                  "feature": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5"
                }
              },
              "operator": "==",
              "right": {
                "value": {
                  "trait": "nodeTrait",
                  "feature": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5",
                  "enum": "false"
                }
              }
            }
          ]
        }
      },
      {
        "id": "activeEdgesWithSourceNodeNewlyInfected",
        "ann:label": "All edges which are currently active, i.e., weight < 1/999,999",
        "scope": "local",
        "content": {
          "operation": "intersection",
          "sets": [
            {
              "elementType": "edge",
              "scope": "local",
              "left": {
                "edge": {
                  "property": "weight"
                }
              },
              "operator": "<",
              "right": {
                "value": {
                  "number": 0.0000011
                }
              }
            },
            {
              "elementType": "edge",
              "scope": "local",
              "operator": "withSourceNodeIn",
              "selector": {
                "set": {
                  "idRef": "enteredIsympGlobal"
                }
              }
            }
          ]
        }
      },
      {
        "id": "knowsNewlySymptomatic",
        "ann:label": "All nodes which are in contact with a newly symptomatic node",
        "scope": "local",
        "content": {
          "elementType": "node",
          "scope": "local",
          "operator": "withIncomingEdgeIn",
          "selector": {
            "set": {
              "idRef": "activeEdgesWithSourceNodeNewlyInfected"
            }
          }
        }
      },
      {
        "id": "participateInHomeQuarantineLocal",
        "ann:label": "All nodes which participate in voluntary home quarantine.",
        "scope": "local",
        "content": {
          "elementType": "node",
          "scope": "local",
          "left": {
            "node": {
              "property": "nodeTrait",
              "feature": "participateInHomeQuarantine"
            }
          },
          "operator": "==",
          "right": {
            "value": {
              "trait": "nodeTrait",
              "feature": "participateInHomeQuarantine",
              "enum": "true"
            }
          }
        }
      },
      {
        "id": "participateInHomeQuarantineGlobal",
        "ann:label": "All nodes which participate in voluntary home quarantine.",
        "scope": "global",
        "content": {
          "elementType": "node",
          "scope": "global",
          "left": {
            "node": {
              "property": "nodeTrait",
              "feature": "participateInHomeQuarantine"
            }
          },
          "operator": "==",
          "right": {
            "value": {
              "trait": "nodeTrait",
              "feature": "participateInHomeQuarantine",
              "enum": "true"
            }
          }
        }
      },
      {
        "id": "workEdgesTarget",
        "scope": "local",
        "content": {
          "elementType": "edge",
          "left": {
            "edge": {
              "property": "targetActivity",
              "feature": "activityType"
            }
          },
          "operator": "==",
          "right": {
            "value": {
              "trait": "activityTrait",
              "feature": "activityType",
              "enum": "work"
            }
          }
        }
      },
      {
        "id": "workEdgesSource",
        "scope": "local",
        "content": {
          "elementType": "edge",
          "left": {
            "edge": {
              "property": "sourceActivity",
              "feature": "activityType"
            }
          },
          "operator": "==",
          "right": {
            "value": {
              "trait": "activityTrait",
              "feature": "activityType",
              "enum": "work"
            }
          }
        }
      },
      {
        "id": "targetNodeParticipateInHomeQuarantine",
        "scope": "local",
        "content": {
          "operation": "intersection",
          "sets": [
            {
              "scope": "local",
              "elementType": "edge",
              "operator": "withTargetNodeIn",
              "selector": {
                "set": {
                  "idRef": "participateInHomeQuarantineLocal"
                }
              }
            },
            {
              "set": {
                "idRef": "workEdgesTarget"
              }
            }
          ]
        }
      },
      {
        "id": "sourceNodeParticipateInHomeQuarantine",
        "scope": "local",
        "content": {
          "operation": "intersection",
          "sets": [
            {
              "elementType": "edge",
              "operator": "withSourceNodeIn",
              "selector": {
                "set": {
                  "idRef": "participateInHomeQuarantineGlobal"
                }
              }
            },
            {
              "set": {
                "idRef": "workEdgesSource"
              }
            }
          ]
        }
      }
    ],
    "variables": [],
    "triggers": [
      {
        "ann:id": "mark_individual_as_having_entered_previously",
        "trigger": {
          "left": {
            "sizeof": {
              "set": {
                "idRef": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5"
              }
            }
          },
          "operator": ">",
          "right": {
            "value": {
              "number": 0
            }
          }
        },
        "interventionIds": [
          "mark_individual_as_having_entered_previously"
        ]
      },
      {
        "ann:id": "select_participants_for_voluntary_home_quarantine",
        "trigger": {
          "left": {
            "sizeof": {
              "set": {
                "idRef": "knowsNewlySymptomatic"
              }
            }
          },
          "operator": ">",
          "right": {
            "value": {
              "number": 0
            }
          }
        },
        "interventionIds": [
          "select_participants_for_voluntary_home_quarantine"
        ]
      },
      {
        "ann:id": "voluntary_home_quarantine_self",
        "trigger": {
          "left": {
            "sizeof": {
              "set": {
                "idRef": "targetNodeParticipateInHomeQuarantine"
              }
            }
          },
          "operator": ">",
          "right": {
            "value": {
              "number": 0
            }
          }
        },
        "interventionIds": [
          "voluntary_home_quarantine_self"
        ]
      },
      {
        "ann:id": "voluntary_home_quarantine_self_co_worker",
        "trigger": {
          "left": {
            "sizeof": {
              "set": {
                "idRef": "sourceNodeParticipateInHomeQuarantine"
              }
            }
          },
          "operator": ">",
          "right": {
            "value": {
              "number": 0
            }
          }
        },
        "interventionIds": [
          "voluntary_home_quarantine_self_co_worker"
        ]
      }
    ],
    "interventions": [
      {
        "$comment": "Mark individual as having entered previously",
        "id": "mark_individual_as_having_entered_previously",
        "target": {
          "set": {
            "idRef": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5"
          }
        },
        "foreach": [
          {
            "operations": [
              {
                "target": {
                  "node": {
                    "property": "nodeTrait",
                    "feature": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5"
                  }
                },
                "operator": "=",
                "value": {
                  "trait": "nodeTrait",
                  "feature": "9ddee2fa-40e8-11ee-8ee0-f8b156b6e7a5",
                  "enum": "true"
                }
              }
            ]
          }
        ]
      },
      {
        "ann:label": "Select Participants for voluntary home quarantine",
        "id": "select_participants_for_voluntary_home_quarantine",
        "target": {
          "set": {
            "idRef": "knowsNewlySymptomatic"
          }
        },
        "sampling": {
          "type": "individual",
          "number": 30,
          "sampled": {
            "foreach": [
              {
                "delay": 0,
                "operations": [
                  {
                    "target": {
                      "node": {
                        "property": "nodeTrait",
                        "feature": "participateInHomeQuarantine"
                      }
                    },
                    "operator": "=",
                    "value": {
                      "trait": "nodeTrait",
                      "feature": "participateInHomeQuarantine",
                      "enum": "true"
                    }
                  }
                ]
              },
              {
                "delay": 1,
                "operations": [
                  {
                    "target": {
                      "node": {
                        "property": "nodeTrait",
                        "feature": "participateInHomeQuarantine"
                      }
                    },
                    "operator": "=",
                    "value": {
                      "trait": "nodeTrait",
                      "feature": "participateInHomeQuarantine",
                      "enum": "false"
                    }
                  }
                ]
              }
            ]
          }
        }
      },
      {
        "ann:label": "voluntary home quarantine (self)",
        "id": "voluntary_home_quarantine_self",
        "target": {
          "set": {
            "idRef": "targetNodeParticipateInHomeQuarantine"
          }
        },
        "foreach": [
          {
            "operations": [
              {
                "target": {
                  "edge": {
                    "property": "weight"
                  }
                },
                "operator": "/=",
                "value": {
                  "number": 1000000
                }
              }
            ]
          },
          {
            "delay": 14,
            "operations": [
              {
                "target": {
                  "edge": {
                    "property": "weight"
                  }
                },
                "operator": "*=",
                "value": {
                  "number": 1000000
                }
              }
            ]
          }
        ]
      },
      {
        "$comment": "voluntary home quarantine (co-worker)",
        "id": "voluntary_home_quarantine_self_co_worker",
        "target": {
          "set": {
            "idRef": "sourceNodeParticipateInHomeQuarantine"
          }
        },
        "foreach": [
          {
            "operations": [
              {
                "target": {
                  "edge": {
                    "property": "weight"
                  }
                },
                "operator": "/=",
                "value": {
                  "number": 1000000
                }
              }
            ]
          },
          {
            "delay": 14,
            "operations": [
              {
                "target": {
                  "edge": {
                    "property": "weight"
                  }
                },
                "operator": "*=",
                "value": {
                  "number": 1000000
                }
              }
            ]
          }
        ]
      }
    ]
  },
  "userInput": [
    {
      "ann:id": "ParticipationPercentage",
      "ann:label": "Participation Percentage",
      "ann:description": "The percent of individuals voluntary participating.",
      "value": [
        "/template/interventions/2/sampling/number"
      ],
      "exceads": {
        "minValue": 0,
        "maxValue": 100,
        "sweep": true,
        "calibrate": false
      }
    },
    {
      "ann:id": "DurationOfParticipation",
      "ann:label": "Duration of Participation",
      "ann:description": "The duration in days the individuals participate.",
      "value": [
        "/template/interventions/3/foreach/2/delay",
        "/template/interventions/4/foreach/2/delay"
      ],
      "exceads": {
        "minValue": 1,
        "maxValue": 30,
        "sweep": true,
        "calibrate": false
      }
    },
    {
      "ann:id": "QuarantinedHealthStates",
      "ann:label": "Quarantined Health States",
      "ann:description": "The Health States of quarantined Individuals",
      "value": [
        "/template/sets/1/content/sets/1/right/valueList/healthState/",
        "/template/sets/2/content/sets/1/right/valueList/healthState/"
      ],
      "validValues": [
        {
          "jsonPath": "$..states.*.id"
        }
      ],
      "exceads": {
        "attributeType": "text"
      }
    }
  ],
  "requirements": [],
  "engines": [
    "EpiHiper"
  ],
  "exceads": {
    "requires": {
      "allOf": [
        "count_symptomatic_helper.json"
      ]
    }
  }
}